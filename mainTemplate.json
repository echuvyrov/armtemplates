{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "westus",
            "metadata": {
                "description": "Location where to create the resources"
            }
        },
        "adminUserName": {
            "type": "string",
            "metadata": {
                "description": "UserName for the Virtual Machine"
            }
        },
        "adminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "Password for the Virtual Machine"
            }
        },
        "artifactsBaseUrl": {
            "type": "string",
            "defaultValue": "https://s3.amazonaws.com/dgsecure/sqlserveronazure/",
            "metadata": {
                "description": "Base URL of the solution template gallery package",
                "artifactsBaseUrl": ""
            }
        },
        "vmName": {
            "type": "string",
            "metadata": {
                "description": "Name for the Ubuntu Virtual Machine."
            },
            "defaultValue": "MyUbuntuVM"
        },
        "sqlSrvDBName": {
            "type": "string",
            "metadata": {
                "description": "Name for the SQL Server Virtual Machine."
            },
            "defaultValue": "SqlServer14"
        },
        "sqlVMSize": {
            "type": "string",
            "metadata": {
                "description": "The size of the SQL VM Created"
            },
            "defaultValue": "Standard_DS1"
        },
        "frontEndNSGName": {
            "type": "string",
            "defaultValue": "NSG-FrontEnd",
            "metadata": {
                "description": "Name for the NSG used to allow remote RDP and Web Traffic"
            }
        },
        "publicIPAddressName": {
            "type": "string",
            "defaultValue": "matrixpublicip",
            "metadata": {
                "description": "Public IP Address of the DgSecure Node."
            }
        },
        "dnsNameForPublicIP": {
            "type": "string",
            "metadata": {
                "description": "DNS Name of DgSecure Public IP."
            }
        },
        "sqlPublicIp": {
            "type": "string",
            "defaultValue": "SqlPip",
            "metadata": {
                "description": "Public IP Address of the SQL Server node."
            }
        },
        "dnsNameForSQLPublicIP": {
            "type": "string",
            "metadata": {
                "description": "DNS Name of SQL Server Public IP."
            }
        }

    },
    "variables": {
        "baseUrl": "[concat(parameters('artifactsBaseUrl'))]",
        "imagePublisher": "Canonical",
        "newStorageAccountName": "[concat(uniquestring(resourceGroup().id), 'standardsa')]",
        "ubuntuOSVersion": "14.04.2-LTS",
        "imageOffer": "UbuntuServer",
        "OSDiskName": "osdiskforlinuxsimple",
        "nicName": "UbuntuVMNic",
        "addressPrefix": "10.0.0.0/16",
        "subnetName": "Subnet",
        "subnetPrefix": "10.0.0.0/24",
        "storageAccountType": "Standard_LRS",
        "vmStorageAccountContainerName": "vhds",
        "vmSize": "Standard_D1",
        "virtualNetworkName": "MyVNET",
        "vnetID": "[resourceId('Microsoft.Network/virtualNetworks',variables('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetID'),'/subnets/',variables('subnetName'))]",
        "apiVersion": "2015-06-15",
        "vhdContainer": "vhds",
        "virtualNetworkName": "['Vnet']",
        "sqlSrvDBOsDiskName": "['DBSrvOS']",
        "sqlSrvDBNicName": "SQLVMNic",
        "sqlPublicIPRef": "[resourceId('Microsoft.Network/publicIPAddresses', parameters('sqlPublicIP'))]",
        "sqlImagePublisher": "MicrosoftSQLServer",
        "sqlImageOffer": "SQL2014-WS2012R2",
        "sqlImageSku": "Standard",
        "vmExtensionName": "dscExtension",
        "creatingPublicIPsUrl": "[concat(parameters('artifactsBaseUrl'),'CreatePublicIP.json')]",
        "publicIPAddressType": "Dynamic"
    },
    "resources": [
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[variables('newStorageAccountName')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[parameters('location')]",
            "properties": {
                "accountType": "[variables('storageAccountType')]"
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "name": "[parameters('publicIPAddressName')]",
            "location": "[parameters('location')]",
            "properties": {
                "publicIPAllocationMethod": "[variables('publicIPAddressType')]",
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForPublicIP')]"
                }
            }
        },
        {
            "name": "SettingUpPublicIPs",
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2016-02-01",
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[variables('creatingPublicIPsUrl')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "location": {
                        "value": "[parameters('location')]"
                    },
                    "vmpublicIPAddressName": {
                        "value": "[parameters('sqlPublicIP')]"
                    },
                    "dnsPrefix": {
                        "value": "[parameters('dnsNameForSQLPublicIP')]"
                    },
                    "publicIPAddressType": {
                        "value": "[variables('publicIPAddressType')]"
                    }
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[variables('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[variables('addressPrefix')]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[variables('subnetName')]",
                        "properties": {
                            "addressPrefix": "[variables('subnetPrefix')]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "2015-06-15",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('frontEndNSGName')]",
            "location": "[parameters('location')]",
            "tags": {
                "displayName": "NSG - Public IPs"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "rdp-rule",
                        "properties": {
                            "description": "Allow RDP",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "3389",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "web-rule",
                        "properties": {
                            "description": "Allow WEB",
                            "protocol": "Tcp",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "Internet",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 101,
                            "direction": "Inbound"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Network/networkInterfaces",
            "name": "[variables('nicName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "Microsoft.Resources/deployments/SettingUpPublicIPs",
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIPAddress": {
                                "id": "[resourceId('Microsoft.Network/publicIPAddresses',parameters('publicIPAddressName'))]"
                            },
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('frontEndNSGName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[parameters('sqlPublicIP')]",
            "type": "Microsoft.Network/publicIPAddresses",
            "location": "[parameters('location')]",
            "apiVersion": "[variables('apiVersion')]",
            "tags": {
                "displayName": "SqlPIP"
            },
            "properties": {
                "publicIPAllocationMethod": "Dynamic",
                "idleTimeoutInMinutes": 4,
                "dnsSettings": {
                    "domainNameLabel": "[parameters('dnsNameForSQLPublicIP')]"
                }
            }
        },
        {
            "name": "[variables('sqlSrvDBNicName')]",
            "type": "Microsoft.Network/networkInterfaces",
            "location": "[parameters('location')]",
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Network/virtualNetworks/', variables('virtualNetworkName'))]"
            ],
            "tags": {
                "displayName": "SQLSrvDBNic"
            },
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "privateIPAllocationMethod": "Dynamic",
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "publicIPAddress": {
                                "id": "[variables('sqlPublicIPRef')]"
                            },
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('frontEndNSGName'))]"
                            }
                        }
                    }
                ]
            }
        },
        {
            "name": "[concat( 'sqlSrv14')]",
            "type": "Microsoft.Compute/virtualMachines",
            "location": "[parameters('location')]",
            "apiVersion": "[variables('apiVersion')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('sqlSrvDBNicName'))]",
                "[concat('Microsoft.Network/publicIPAddresses/', parameters('sqlPublicIP'))]"
            ],
            "tags": {
                "displayName": "SQL-Svr-DB"
            },
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('sqlVmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('sqlSrvDBName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('sqlImagePublisher')]",
                        "offer": "[variables('sqlImageOffer')]",
                        "sku": "[variables('sqlImageSku')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "SQL-Svr-DBOSDisk",
                        "vhd": {
                            "uri": "[concat('http://', variables('newStorageAccountName'), '.blob.core.windows.net/', variables('vhdContainer'), '/', variables('sqlSrvDBOsDiskName'), '.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },

                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', variables('sqlSrvDBNicName'))]"
                        }
                    ]
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat(parameters('vmName'), '/install_dgsecure')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', parameters('vmName'))]",
                "[concat('Microsoft.Compute/virtualMachines/',  'sqlSrv14')]"
            ],
            "properties": {
                "publisher": "Microsoft.OSTCExtensions",
                "type": "CustomScriptForLinux",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [ "[concat(variables('baseUrl'),'SetupDgSecure.sh')]" ],
                    "commandToExecute": "[concat('sh SetupDgSecure.sh ', reference('SettingUpPublicIPs').outputs.fqdn.value)]"
                }
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines/extensions",
            "name": "[concat( 'sqlSrv14','/WinRMCustomScriptExtension')]",
            "apiVersion": "[variables('apiVersion')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Compute/virtualMachines/', 'sqlSrv14')]"
            ],
            "properties": {
                "publisher": "Microsoft.Compute",
                "type": "CustomScriptExtension",
                "typeHandlerVersion": "1.4",
                "autoUpgradeMinorVersion": true,
                "settings": {
                    "fileUris": [ "[concat(variables('baseUrl'),'db/createdb.ps1')]" ],
                    "commandToExecute": "[concat('powershell -ExecutionPolicy Unrestricted -file createdb.ps1 ',parameters('sqlSrvDBName'))]"
                }
            }
        },
        {
            "apiVersion": "[variables('apiVersion')]",
            "type": "Microsoft.Compute/virtualMachines",
            "name": "[parameters('vmName')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Storage/storageAccounts/', variables('newStorageAccountName'))]",
                "[concat('Microsoft.Network/networkInterfaces/', variables('nicName'))]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[variables('vmSize')]"
                },
                "osProfile": {
                    "computerName": "[parameters('vmName')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "adminPassword": "[parameters('adminPassword')]"
                },
                "storageProfile": {
                    "imageReference": {
                        "publisher": "[variables('imagePublisher')]",
                        "offer": "[variables('imageOffer')]",
                        "sku": "[variables('ubuntuOSVersion')]",
                        "version": "latest"
                    },
                    "osDisk": {
                        "name": "osdisk",
                        "vhd": {
                            "uri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net/',variables('vmStorageAccountContainerName'),'/',variables('OSDiskName'),'.vhd')]"
                        },
                        "caching": "ReadWrite",
                        "createOption": "FromImage"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces',variables('nicName'))]"
                        }
                    ]
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": "true",
                        "storageUri": "[concat('http://',variables('newStorageAccountName'),'.blob.core.windows.net')]"
                    }
                }
            }
        }
    ]
}